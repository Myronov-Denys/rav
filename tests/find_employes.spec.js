const {test, expect} = require('@playwright/test');
const { LoginPage } = require('./pages/login_page');
let page;
test.beforeAll(async ({ browser }) => {
    page = await browser.newPage();
    const loginPage = new LoginPage(page)
        await loginPage.goto();
        await loginPage.validLogin();
    })
test('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π) –ø–æ –∏–º–µ–Ω–∏', async ()=> {
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').click()
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').fill('AnTon DyaChenko')
    await page.getByRole('heading', { name: 'Anton Dyachenko' }).getByText('Anton Dyachenko');
})

test('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π) –ø–æ –ø–æ—á—Ç–µ', async ()=> {
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').click()
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').fill('anton.dyachenko@devit.group')
    await page.locator('[id="\\32 1"]').getByText('anton.dyachenko@devit.group')
})

test('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π) - ü§ñ', async ()=> {
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').click()
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').fill('ü§ñ')
    await expect(page.locator('div.Polaris-TextContainer > p')).toHaveText('—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
})
test('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π) - –ª–∞—Ç–∏–Ω–æ—é', async ()=> {
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').click()
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').fill('–∞–Ω—Ç–æ–Ω')
    await expect(page.locator('div.Polaris-TextContainer > p')).toHaveText('—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
})    
test('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π) - —Ü–∏—Ñ—Ä–∞–º–∏', async ()=> {
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').click()
    await page.getByPlaceholder('–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞').fill('22')
    await expect(page.locator('div.Polaris-TextContainer > p')).toHaveText('—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}) 